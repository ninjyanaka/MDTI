{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "Perform automated enrichment on the Microsoft Sentinel Incidents based on MDTI Reputation data.",
        "title": "MDTI-Data-PassiveDns-Ip", 
        "description": "This playbook uses the MDTI API to get Passive DNS information.",
        "prerequisites": ["This playbook inherits API connections created and established within a base playbook. Ensure you have deployed [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) prior to deploying this playbook. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)."],
        "lastUpdateTime": "2023-03-09T00:00:00.000Z", 
        "entities": [], 
        "tags": [], 
        "postDeployment": [
            "After deploying the playbook, you must authorize the connections leveraged.", 
            "1. Visit the playbook resource.", 
            "2. Under 'Development Tools' (located on the left), click 'API Connections'.", 
            "3. Ensure each connection has been authorized.", 
            "**Note: If you've deployed the [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) playbook, you will only need to authorize the Microsoft Sentinel connection.**"],
        "author": {
            "name": "Hiroki Nakamura, Microsoft"
        },
        "releaseNotes": [
        {
            "version": "1.0.0",
            "title": "MDTI Passive DNS IP",
            "notes": [
                "Initial version"
            ]
        }
        ]
        },
        "variables": {
    	    "AzureSentinelConnectionName": 
            "[concat('azuresentinel-', parameters('PlaybookName'))]"
        },
        "parameters": {
            "PlaybookName": {
            "defaultValue": "MDTI-Incident-Data-PassiveDns-Ip",
            "type": "String"
            }
        },
        "resources": [
            {
                "type": "Microsoft.Web/connections",
                "apiVersion": "2016-06-01",
                "name": "[variables('AzureSentinelConnectionName')]",
                "location": "[resourceGroup().location]",
                "properties": {
                    "api": {
                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                    }
                }
            },{
                "type": "Microsoft.Logic/workflows",
                "apiVersion": "2017-07-01",
                "name": "[parameters('PlaybookName')]",
                "location": "[resourceGroup().location]",
                "tags": {
                    "LogicAppsCategory": "security",
                    "Source": "MDTI"
                },
                "dependsOn": [
                    "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
                ],
                "properties": {
                    "state": "Enabled",
                    "definition": {
                        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                            "$connections": {
                                "defaultValue": {},
                                "type": "Object"
                           }
                        },
                        "triggers": {
                            "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                                "type": "ApiConnectionWebhook",
                                "inputs": {
                                    "body": {
                                        "callback_url": "@{listCallbackUrl()}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                    },
                                    "path": "/incident-creation"
                                }
                            }
                        },
                        "actions": {
                            "Alert_-_Get_incident": {
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                    },
                                    "method": "get",
                                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                                },
                                "runAfter": {
                                    "MDTI-Base": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "Entities_-_Get_IPs": {
                                "inputs": {
                                    "body": "@triggerBody()?['Entities']",
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/entities/ip"
                                },
                                "runAfter": {
                                    "Initialize_variable": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "For_each": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)": {
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                "message": "<p>Passive DNS for @{items('For_each')?['Address']}<br>\n@{variables('Ip_comment')}</p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        },
                                        "runAfter": {
                                            "Condition": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection"
                                    },
                                    "Condition": {
                                        "actions": {
                                            "Create_HTML_table": {
                                                "inputs": {
                                                    "format": "HTML",
                                                    "from": "@variables('ip_results')"
                                                },
                                                "runAfter": {},
                                                "type": "Table"
                                            },
                                            "Set_variable_2": {
                                                "inputs": {
                                                    "name": "Ip_comment",
                                                    "value": "@body('Create_HTML_table')"
                                                },
                                                "runAfter": {
                                                    "Create_HTML_table": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable"
                                            }
                                        },
                                        "else": {
                                            "actions": {
                                                "Set_variable_3": {
                                                    "inputs": {
                                                        "name": "Ip_comment",
                                                        "value": "Not result found."
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@length(variables('ip_results'))",
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "runAfter": {
                                            "For_each__ip_resolve": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "For_each__ip_resolve": {
                                        "actions": {
                                            "Append_to_array_variable": {
                                                "inputs": {
                                                    "name": "ip_results",
                                                    "value": {
                                                        "First": "@items('For_each__ip_resolve')?['firstSeenDateTime']",
                                                        "Last": "@items('For_each__ip_resolve')?['lastSeenDateTime']",
                                                        "Type": "@items('For_each__ip_resolve')?['recordType']",
                                                        "Value": "@items('For_each__ip_resolve')?['artifact']?['id']"
                                                    }
                                                },
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable"
                                            }
                                        },
                                        "foreach": "@body('Parse_JSON')",
                                        "runAfter": {
                                            "Set_variable": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Foreach"
                                    },
                                    "GETPDNS": {
                                        "inputs": {
                                            "authentication": {
                                                "audience": "@body('MDTI-Base')?['resource']",
                                                "clientId": "@body('MDTI-Base')?['clientId']",
                                                "secret": "@body('MDTI-Base')?['clientSecret']",
                                                "tenant": "@body('MDTI-Base')?['tenantId']",
                                                "type": "ActiveDirectoryOAuth"
                                            },
                                            "headers": {
                                                "Content-Type": "application/json"
                                            },
                                            "method": "GET",
                                            "queries": {
                                                "$count": "true",
                                                "$top": "25"
                                            },
                                            "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each')?['Address']}')/passiveDns"
                                        },
                                        "runAfter": {},
                                        "type": "Http"
                                    },
                                    "Parse_JSON": {
                                        "inputs": {
                                            "content": "@body('GETPDNS')?['value']",
                                            "schema": {
                                                "items": {
                                                    "properties": {
                                                        "artifact": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "category": {
                                                            "type": "string"
                                                        },
                                                        "collectedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "firstSeenDateTime": {
                                                            "type": "string"
                                                        },
                                                        "lastSeenDateTime": {
                                                            "type": "string"
                                                        },
                                                        "recordType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "firstSeenDateTime",
                                                        "artifact",
                                                        "recordType",
                                                        "lastSeenDateTime",
                                                        "collectedDateTime"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "runAfter": {
                                            "GETPDNS": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ParseJson"
                                    },
                                    "Set_variable": {
                                        "inputs": {
                                            "name": "ip_results",
                                            "value": []
                                        },
                                        "runAfter": {
                                            "Parse_JSON": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable"
                                    }
                                },
                                "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                                "runAfter": {
                                    "Init_ip_comment": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Foreach"
                            },
                            "Init_ip_comment": {
                                "inputs": {
                                    "variables": [
                                        {
                                            "name": "Ip_comment",
                                            "type": "string"
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Init_ip_ressults": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "InitializeVariable"
                            },
                            "Init_ip_ressults": {
                                "inputs": {
                                    "variables": [
                                        {
                                            "name": "ip_results",
                                            "type": "array"
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Entities_-_Get_IPs": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "InitializeVariable"
                            },
                            "Initialize_variable": {
                                "inputs": {
                                    "variables": [
                                        {
                                            "name": "lookback",
                                            "type": "string",
                                            "value": "@{formatDateTime(addDays(utcNow(), -7), 'yyyy-MM-dd')}"
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Alert_-_Get_incident": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "InitializeVariable"
                            },
                            "MDTI-Base": {
                                "inputs": {
                                    "host": {
                                        "triggerName": "manual",
                                        "workflow": {
                                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/MDTI-Base')]"
                                        }
                                    }
                                },
                                "runAfter": {},
                                "type": "Workflow"
                            }
                        }
                    },
                    "parameters": {
                            "$connections": {
                                "value": {
                                    "azuresentinel": {
                                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                        "connectionName": "[variables('AzureSentinelConnectionName')]",
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                                    }
                                }
                            }
                        }
                    }
            }
        ]
    }